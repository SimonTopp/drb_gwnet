#from snakemake.io import expand

from gwn.generate_training_data_drb import prep_data
from gwn.viz import plot_ts
from gwn.train_drb import train
import gwn.post_proc_utils as ppu
from gwn.util import asRunConfig

subdirs = config['subdir']

rule all:
    input:
        expand("{outdir}/{subdir}/{metric_type}_metrics.csv",
            outdir=config["out_dir"],
            subdir=subdirs,
            metric_type=['overall', 'month', 'reach']),
        expand("{outdir}/{subdir}/figs/ExampleTS.png",
            outdir=config["out_dir"],
            subdir=subdirs)

rule calc_ci:
    input:
        "{outdir}/prepped.npz",
        "{outdir}/{subdir}/prepped_preds.npz",
    output:
        "{outdir}/{subdir}/conf_ints.npz",
    resources:
        nvidia_gpu=1
    threads: 4
    #group: "{subdir}_train"
    run:
        ppu.calc_uq(
            f"{wildcards.outdir}/{wildcards.subdir}",
            input[0],
            input[1],
            quantile=config['uq_quant'],
            rdl=True
        )

rule combine_outputs:
    input:
        "{outdir}/prepped.npz",
        "{outdir}/{subdir}/prepped_preds.npz",
        "{outdir}/{subdir}/conf_ints.npz",
    output:
        "{outdir}/{subdir}/combined_results.csv"
    #group: "{subdir}_eval"
    threads: 2
    run:
        ppu.combine_outputs(f"{wildcards.outdir}/{wildcards.subdir}",
            input[0],
            input[1],
            input[2],
            config['scale_y'],
            config['clean_prepped'])


def get_grp_arg(wildcards):
    if wildcards.metric_type == 'overall':
        return None
    elif wildcards.metric_type == 'month':
        return 'month'
    elif wildcards.metric_type == 'reach':
        return 'seg_id_nat'


rule group_metrics:
    input:
        "{outdir}/{subdir}/combined_results.csv"
    output:
        "{outdir}/{subdir}/{metric_type}_metrics.csv"
    #group: "{subdir}_eval"
    params:
        grp_arg=get_grp_arg
    run:
        ppu.partition_metrics(input[0],
            group=params.grp_arg,
            outfile=output[0])

rule viz:
    input:
        "{outdir}/{subdir}/combined_results.csv",
    output:
        "{outdir}/{subdir}/figs/ExampleTS.png",
    #group: "{subdir}_eval"
    threads: 2
    run:
        plot_ts(f"{wildcards.outdir}/{wildcards.subdir}")
